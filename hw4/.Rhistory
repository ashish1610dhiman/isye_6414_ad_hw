knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
df_tax = read.table(file ="./6414-HW2-taxes.csv",skip=1, sep=",",header=TRUE)
head(df_tax)
dim(df_tax)
summary(df_tax)
df_tax = df_tax[1:(nrow(df_tax)-2),] #Remove last two empty rows
dim(df_tax)
title_i = "Sales Price vs Annual Taxes (both in 10k USD)"
plot(x=df_tax$Taxes, y=df_tax$Sale.Price, type ="p",main = title_i)
print (paste("Corealtion on full data:",round(cor(df_tax$Taxes,df_tax$Sale.Price),2)))
#Fit SLR
model0 <- lm(Sale.Price ~ Taxes, data = df_tax)
model0
#Superpositioning regression line on
ggplot(df_tax, aes(Taxes, Sale.Price)) + #aes(x,y)
geom_point() +
stat_smooth(method = lm, se = FALSE)
summary(model0)
s_squared = sum(sapply(model0["residuals"], function(x) x^2))/(nrow(df_tax)-2)
print (paste("Sigma^2 is", s_squared))
print (paste("Sigma^2 is", s_squared^0.5))
y_hat = fitted(model0)
y_act = df_tax$Sale.Price
sse = sum((y_act - y_hat)^2)
print (paste("sse is",sse))
print(paste("s^2 from fitted values",(sse/(nrow(df_tax)-2))))
num = 1697.8 - (14 * (43/14) * (572/14))
num
denom = 157.42 - (14*(43/14)^2)
denom
beta1 = num/denom
print (paste("Intecept (or beta0)",beta1))
beta0 = (572/14) - beta1*(43/14)
print (paste("Intecept (or beta0)",beta0))
SS_yy = 23530 - 14 *((572/14))^2
SS_xy = num #from ques7
SSE = SS_yy - beta1 * SS_xy
sigma2 = SSE/(14-2)
print (paste("SSE is",SSE))
print (paste("Sigma squared is",sigma2))
y_act = 46.1
y_hat = beta0 + beta1 * 3.7
residual = y_act - y_hat
print (paste("Predicted Y value is",y_hat))
print (paste("Corresponding Residual is",residual))
s_squared = sum(sapply(model0["residuals"], function(x) x^2))/(nrow(df_tax)-2)
print (paste("Sigma is", s_squared^0.5))
print (paste("Sigma^2 is", s_squared))
std(model0["residuals"])
var(model0["residuals"])
sd(model0["residuals"])
class(model0["residuals"])
model0["residuals"]
unlist(model0["residuals"])
sd(unlist(model0["residuals"]))
2.89*23
(2.89^2)*23
s_squared = sum(sapply(model0["residuals"], function(x) x^2))/(nrow(df_tax)-2)
sse = s_squared * (24-2)
print (paste("Sigma is", s_squared^0.5))
print (paste("Sigma^2 is", s_squared))
print (paste("sse is", sse))
y_hat = fitted(model0)
y_act = df_tax$Sale.Price
sse = sum((y_act - y_hat)^2)
print (paste("sse is",sse))
print(paste("s^2 from fitted values",(sse/(nrow(df_tax)-2))))
num = 1697.8 - (14 * (43/14) * (572/14))
num
denom = 157.42 - (14*(43/14)^2)
denom
beta1 = num/denom
print (paste("Slope (or beta1)",beta1))
beta0 = (572/14) - beta1*(43/14)
print (paste("Intecept (or beta0)",beta0))
SS_yy = 23530 - 14 *((572/14))^2
SS_xy = num #from ques7
SSE = SS_yy - beta1 * SS_xy
sigma2 = SSE/(14-2)
print (paste("SSE is",SSE))
print (paste("Sigma squared is",sigma2))
y_act = 46.1
y_hat = beta0 + beta1 * 3.7
residual = y_act - y_hat
print (paste("Predicted Y value is",y_hat))
print (paste("Corresponding Residual is",residual))
knitr::opts_chunk$set(echo = TRUE)
#In R this is given as:
confint(slr_model,level = 0.95)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
setwd("~/data_projects/fall22_hw/isye6414_hw/hw3")
df_demand_price = read.table(file ="./6414_HW3_Clean.csv", sep=",",header=TRUE)
head(df_demand_price)
dim(df_demand_price)
summary(df_demand_price)
title_i = "Demand (in hundred thousands) vs Price Delta (in USD)"
plot(x=df_demand_price$PriceDif, y=df_demand_price$Demand, type ="p",main = title_i)
cor_xy = cor(df_demand_price$Demand,df_demand_price$PriceDif)
print (paste("Corealtion on full data:",round(cor_xy,2)))
#Fit SLR
slr_model <- lm(Demand ~ PriceDif, data = df_demand_price)
slr_model
#Superpositioning regression line on
ggplot(df_demand_price, aes(PriceDif, Demand)) + #aes(x,y)
geom_point() +
stat_smooth(method = lm, se = FALSE)
summary(slr_model)
#In R this is given as:
confint(slr_model,level = 0.95)
print (paste("95% CI for beta1 is (2.135702,3.194727)"))
print (paste(3.194727-2.135702)/0.25850)
#In R this is given as:
confint(slr_model,level = 0.95)
print (paste("95% CI for beta1 is (2.135702,3.194727)"))
print (paste("Length of CI in terms of sd:"((3.194727-2.135702)/0.25850)))
#In R this is given as:
confint(slr_model,level = 0.95)
print (paste("95% CI for beta1 is (2.135702,3.194727)"))
print (paste("Length of CI in terms of sd:",((3.194727-2.135702)/0.25850)))
#In R this is given as:
confint(slr_model,level = 0.95)
print (paste("95% CI for beta1 is (2.135702,3.194727)"))
print (paste("Length of CI in terms of sd:",round((3.194727-2.135702)/0.25850,2)))
qt(p=0.975,df=28)
qt(p=0.025,df=28)
print ("Critical t values:")
qt(p=0.975,df=28)
qt(p=0.025,df=28)
test = data.frame(x = 0.1)
predict.lm(slr_model, test, interval = "confidence", level = 0.95)
predict.lm(slr_model, 0.1, interval = "predict", level = 0.95)
View(df_demand_price)
test = data.frame(PriceDif = 0.1)
predict.lm(slr_model, test, interval = "confidence", level = 0.95)
predict.lm(slr_model, test, interval = "predict", level = 0.95)
half_length_ci = (8.21334-7.947878)/2
half_length_pi = (8.7425-7.418719)/2
half_length_pi/half_length_ci
half_length_ci = (8.21334-7.947878)/2
half_length_pi = (8.7425-7.418719)/2
print (half_length_pi/half_length_ci)
test = data.frame(PriceDif = 0.25)
predict.lm(slr_model, test, interval = "confidence", level = 0.95)
test2 = data.frame(PriceDif = 0.25)
predict.lm(slr_model, test2, interval = "confidence", level = 0.95)
half_length_ci2 = (8.600362-8.36042)/2
mean(df_demand_price$PriceDif)
half_length_ci2 = (8.600362-8.36042)/2
mean(df_demand_price$PriceDif),half_length_ci2
half_length_ci2 = (8.600362-8.36042)/2
print(mean(df_demand_price$PriceDif),half_length_ci2)
half_length_ci2 = (8.600362-8.36042)/2
print(mean(df_demand_price$PriceDif),half_length_ci2)
half_length_ci2 = (8.600362-8.36042)/2
print(paste(mean(df_demand_price$PriceDif),half_length_ci2))
half_length_ci2 = (8.600362-8.36042)/2
print(paste("mean x and CI2",mean(df_demand_price$PriceDif),half_length_ci2))
half_length_ci2 = (8.600362-8.36042)/2
print(paste("mean x and CI2 = ",mean(df_demand_price$PriceDif),half_length_ci2))
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
setwd("~/data_projects/fall22_hw/isye6414_hw/hw3")
df_demand_price = read.table(file ="./6414_HW3_Clean.csv", sep=",",header=TRUE)
head(df_demand_price)
dim(df_demand_price)
summary(df_demand_price)
title_i = "Demand (in hundred thousands) vs Price Delta (in USD)"
plot(x=df_demand_price$PriceDif, y=df_demand_price$Demand, type ="p",main = title_i)
cor_xy = cor(df_demand_price$Demand,df_demand_price$PriceDif)
print (paste("Corealtion on full data:",round(cor_xy,2)))
#Fit SLR
slr_model <- lm(Demand ~ PriceDif, data = df_demand_price)
slr_model
#Superpositioning regression line on
ggplot(df_demand_price, aes(PriceDif, Demand)) + #aes(x,y)
geom_point() +
stat_smooth(method = lm, se = FALSE)
summary(slr_model)
#In R this is given as:
confint(slr_model,level = 0.95)
print (paste("95% CI for beta1 is (2.135702,3.194727)"))
print (paste("Length of CI in terms of sd:",round((3.194727-2.135702)/0.25850,2)))
print ("Critical t value, for alpha 5%:")
qt(p=0.975,df=28)
qt(p=0.025,df=28)
test = data.frame(PriceDif = 0.1)
predict.lm(slr_model, test, interval = "confidence", level = 0.95)
predict.lm(slr_model, test, interval = "predict", level = 0.95)
half_length_ci = (8.21334-7.947878)/2
half_length_pi = (8.7425-7.418719)/2
print (half_length_pi/half_length_ci)
test2 = data.frame(PriceDif = 0.25)
predict.lm(slr_model, test2, interval = "confidence", level = 0.95)
half_length_ci2 = (8.600362-8.36042)/2
print(paste("mean x and CI2 = ",mean(df_demand_price$PriceDif),half_length_ci2))
half_length_ci = (8.21334-7.947878)/2
half_length_pi = (8.7425-7.418719)/2
print (paste("half Length CI"),half_length_ci)
half_length_ci = (8.21334-7.947878)/2
half_length_pi = (8.7425-7.418719)/2
print (paste("half Length CI",half_length_ci))
print (paste("half Length PI",half_length_pi))
print (half_length_pi/half_length_ci)
summary(slr_model)$coefficients
knitr::opts_chunk$set(echo = TRUE)
test2 = data.frame(PriceDif = 0.25)
predict.lm(slr_model, test2, interval = "confidence", level = 0.95)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
setwd("~/data_projects/fall22_hw/isye6414_hw/hw3")
df_demand_price = read.table(file ="./6414_HW3_Clean.csv", sep=",",header=TRUE)
head(df_demand_price)
dim(df_demand_price)
summary(df_demand_price)
title_i = "Demand (in hundred thousands) vs Price Delta (in USD)"
plot(x=df_demand_price$PriceDif, y=df_demand_price$Demand, type ="p",main = title_i)
cor_xy = cor(df_demand_price$Demand,df_demand_price$PriceDif)
print (paste("Corealtion on full data:",round(cor_xy,2)))
#Fit SLR
slr_model <- lm(Demand ~ PriceDif, data = df_demand_price)
slr_model
#Superpositioning regression line on
ggplot(df_demand_price, aes(PriceDif, Demand)) + #aes(x,y)
geom_point() +
stat_smooth(method = lm, se = FALSE)
summary(slr_model)
#In R this is given as:
confint(slr_model,level = 0.95)
print (paste("95% CI for beta1 is (2.135702,3.194727)"))
print (paste("Length of CI in terms of sd:",round((3.194727-2.135702)/0.25850,2)))
print ("Critical t value, for alpha 5%:")
qt(p=0.975,df=28)
qt(p=0.025,df=28)
summary(slr_model)$coefficients
test = data.frame(PriceDif = 0.1)
predict.lm(slr_model, test, interval = "confidence", level = 0.95)
predict.lm(slr_model, test, interval = "predict", level = 0.95)
half_length_ci = (8.21334-7.947878)/2
half_length_pi = (8.7425-7.418719)/2
print (paste("half Length CI",half_length_ci))
print (paste("half Length PI",half_length_pi))
print (half_length_pi/half_length_ci)
test2 = data.frame(PriceDif = 0.25)
predict.lm(slr_model, test2, interval = "confidence", level = 0.95)
half_length_ci2 = (8.600362-8.36042)/2
print(paste("mean x and CI2 = ",mean(df_demand_price$PriceDif),half_length_ci2))
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
setwd("~/data_projects/fall22_hw/isye6414_hw/hw3")
df_demand_price = read.table(file ="./6414_HW3_Clean.csv", sep=",",header=TRUE)
head(df_demand_price)
dim(df_demand_price)
summary(df_demand_price)
title_i = "Demand (in hundred thousands) vs Price Delta (in USD)"
plot(x=df_demand_price$PriceDif, y=df_demand_price$Demand, type ="p",main = title_i)
cor_xy = cor(df_demand_price$Demand,df_demand_price$PriceDif)
print (paste("Corealtion on full data:",round(cor_xy,2)))
#Fit SLR
slr_model <- lm(Demand ~ PriceDif, data = df_demand_price)
slr_model
#Superpositioning regression line on
ggplot(df_demand_price, aes(PriceDif, Demand)) + #aes(x,y)
geom_point() +
stat_smooth(method = lm, se = FALSE)
summary(slr_model)
#In R this is given as:
confint(slr_model,level = 0.95)
print (paste("95% CI for beta1 is (2.135702,3.194727)"))
print (paste("Length of CI in terms of sd:",round((3.194727-2.135702)/0.25850,2)))
print ("Critical t value, for alpha 5%:")
qt(p=0.975,df=28)
qt(p=0.025,df=28)
summary(slr_model)$coefficients
test = data.frame(PriceDif = 0.1)
predict.lm(slr_model, test, interval = "confidence", level = 0.95)
predict.lm(slr_model, test, interval = "predict", level = 0.95)
half_length_ci = (8.21334-7.947878)/2
half_length_pi = (8.7425-7.418719)/2
print (paste("half Length CI",half_length_ci))
print (paste("half Length PI",half_length_pi))
print (half_length_pi/half_length_ci)
test2 = data.frame(PriceDif = 0.25)
predict.lm(slr_model, test2, interval = "confidence", level = 0.95)
half_length_ci2 = (8.600362-8.36042)/2
print(paste("mean x and Hal Length CI for x=0.25 = ",mean(df_demand_price$PriceDif),half_length_ci2))
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
setwd("~/data_projects/fall22_hw/isye6414_hw/hw3")
df_demand_price = read.table(file ="./6414_HW3_Clean.csv", sep=",",header=TRUE)
head(df_demand_price)
dim(df_demand_price)
summary(df_demand_price)
title_i = "Demand (in hundred thousands) vs Price Delta (in USD)"
plot(x=df_demand_price$PriceDif, y=df_demand_price$Demand, type ="p",main = title_i)
cor_xy = cor(df_demand_price$Demand,df_demand_price$PriceDif)
print (paste("Corealtion on full data:",round(cor_xy,2)))
#Fit SLR
slr_model <- lm(Demand ~ PriceDif, data = df_demand_price)
slr_model
#Superpositioning regression line on
ggplot(df_demand_price, aes(PriceDif, Demand)) + #aes(x,y)
geom_point() +
stat_smooth(method = lm, se = FALSE)
summary(slr_model)
#In R this is given as:
confint(slr_model,level = 0.95)
print (paste("95% CI for beta1 is (2.135702,3.194727)"))
print (paste("Length of CI in terms of sd:",round((3.194727-2.135702)/0.25850,2)))
print ("Critical t value, for alpha 5%:")
qt(p=0.975,df=28)
qt(p=0.025,df=28)
summary(slr_model)$coefficients
test = data.frame(PriceDif = 0.1)
predict.lm(slr_model, test, interval = "confidence", level = 0.95)
predict.lm(slr_model, test, interval = "predict", level = 0.95)
half_length_ci = (8.21334-7.947878)/2
half_length_pi = (8.7425-7.418719)/2
print (paste("half Length CI",half_length_ci))
print (paste("half Length PI",half_length_pi))
print (half_length_pi/half_length_ci)
test2 = data.frame(PriceDif = 0.25)
predict.lm(slr_model, test2, interval = "confidence", level = 0.95)
half_length_ci2 = (8.600362-8.36042)/2
print(paste("mean x and Hal Length CI for x=0.25 = ",mean(df_demand_price$PriceDif),half_length_ci2))
setwd("~/data_projects/fall22_hw/isye6414_hw/hw4")
knitr::opts_chunk$set(echo = TRUE)
data1 = read.csv("./homework04data01.csv",sep=",")
data1 = read.csv("./homework04data01.csv",sep=",")
dim(data1)
summary(data1)
table(data1)
table(data1$Species)
ggplot(data1, aes(x=Species, y=Length, fill=Species)) +
geom_boxplot()
library(ggplot2)
setwd("~/data_projects/fall22_hw/isye6414_hw/hw4")
ggplot(data1, aes(x=Species, y=Length, fill=Species)) +
geom_boxplot()
ggplot(data1, aes(x=Species, y=Length, fill=Species)) +
geom_boxplot() + ggtitle("Antler Length")
ggplot(data1, aes(x=Species, y=Length, fill=Species)) +
geom_boxplot() + ggtitle("Antler Length basis SPecies")
avova_v0 = aov(Length ~ Species, data=data1)
model.tables(avova_v0, type = "means")
anova_v0 = aov(Length ~ Species, data=data1)
model.tables(anova_v0, type = "means")
summary(anova_v0)
299.2/81
90.0/3
TukeyHSD(anova_v0)
summary(data2)
data2 = read.csv("./homework04Hospital.csv",sep=",")
dim(data2)
summary(data2)
lr_model = lm(Hours ~ ., data = data2)
summary(lr_model)
print ("Upper tale t")
qt(0.975, df = 12)
print ("Lower tale t")
qt(0.025, df = 12)
test = lm(Hours ~ Length, data = data2)
summary(test)
