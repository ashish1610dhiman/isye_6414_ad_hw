setwd("~/data_projects/fall22_hw/isye6414_hw/hw2")
knitr::opts_chunk$set(echo = TRUE)
df_tax = read.table(file ="./6414\-HW2\-taxes.csv")
df_tax = read.table(file ="./6414-HW2-taxes.csv")
df_tax = read.table(file ="./6414-HW2-taxes.csv",skip=1)
df_tax = read.table(file ="./6414-HW2-taxes.csv",skip=1, sep=",")
df_tax
df_tax = read.table(file ="./6414-HW2-taxes.csv",skip=1, sep=",",header=true)
df_tax = read.table(file ="./6414-HW2-taxes.csv",skip=1, sep=",",header=True)
df_tax = read.table(file ="./6414-HW2-taxes.csv",skip=1, sep=",",header=TRUE)
df_tax
summary(df_tax)
plot(x=df_tax$Taxes, y=df_tax$Sale.Price, type ="b")
plot(x=df_tax$Taxes, y=df_tax$Sale.Price, type ="p")
df_tax = read.table(file ="./6414-HW2-taxes.csv",skip=1, sep=",",header=TRUE)
head(df_tax)
dim(df_tax)
summary(df_tax)
df_tax = read.table(file ="./6414-HW2-taxes.csv",skip=1, sep=",",header=TRUE)
head(df_tax)
dim(df_tax)
summary(df_tax)
df_tax = df_tax[-2,] #Remove last two empty rows
dim(df_tax)
dim(df_tax)
dim(df_tax)[0]
dim(df_tax)[0]-2
as.integer(dim(df_tax)[0])
nrow(df_tax)
df_tax = read.table(file ="./6414-HW2-taxes.csv",skip=1, sep=",",header=TRUE)
head(df_tax)
dim(df_tax)
summary(df_tax)
df_tax = df_tax[1:nrow(df_tax)-2,] #Remove last two empty rows
df_tax = df_tax[1:(nrow(df_tax)-2)] #Remove last two empty rows
df_tax = df_tax[1:(nrow(df_tax)-2),] #Remove last two empty rows
dim(df_tax)
plot(x=df_tax$Taxes, y=df_tax$Sale.Price, type ="p")
plot(x=df_tax$Taxes, y=df_tax$Sale.Price, type ="p", main = "Sales Price vs Annual Taxes (both in 10k USD"))
plot(x=df_tax$Taxes, y=df_tax$Sale.Price, type ="p", main = "Sales Price vs Annual Taxes (both in 10k USD)")
abline(h=7)
plot(x=df_tax$Taxes, y=df_tax$Sale.Price, type ="p", main = "Sales Price vs Annual Taxes (both in 10k USD)")
abline(h=7)
plot(x=df_tax$Taxes, y=df_tax$Sale.Price, type ="p", main = "Sales Price vs Annual Taxes (both in 10k USD)")
abline(h=7)
plot(x=df_tax$Taxes, y=df_tax$Sale.Price, type ="p", main = "Sales Price vs Annual Taxes (both in 10k USD)")
abline(v=7)
plot(x=df_tax$Taxes, y=df_tax$Sale.Price, type ="p", main = "Sales Price vs Annual Taxes (both in 10k USD)")
abline(v=7, c ="r")
plot(x=df_tax$Taxes, y=df_tax$Sale.Price, type ="p", main = "Sales Price vs Annual Taxes (both in 10k USD)")
abline(v=7, col="red")
abline(v=7, col="red", lwd = 4)
plot(x=df_tax$Taxes, y=df_tax$Sale.Price, type ="p", main = "Sales Price vs Annual Taxes (both in 10k USD)")
abline(v=7, col="red", lwd = 4)
print (paste("Corealtion on full data",round(cor(df_tax$Taxes,df_tax$Sale.Price),2)))
print (paste("Corealtion on full data:",round(cor(df_tax$Taxes,df_tax$Sale.Price),2)))
df_tax[df_tax$Taxes<7]$Taxes
df_tax[df_tax$Taxes<7,]$Taxes
print (paste("Corealtion on full data:",round(cor(df_tax$Taxes,df_tax$Sale.Price),2)))
print (paste("Corealtion on Taxes <= 7:",round(cor(df_tax[df_tax$Taxes<=7,]$Taxes,df_tax[df_tax$Taxes<=7,]$Sale.Price),2)))
print (paste("Corealtion on full data:",round(cor(df_tax$Taxes,df_tax$Sale.Price),2)))
print (paste("Corealtion on Taxes <= 7:",round(cor(df_tax[df_tax$Taxes<=7,]$Taxes,df_tax[df_tax$Taxes<=7,]$Sale.Price),2)))
print (paste("Corealtion on Taxes > 7:",round(cor(df_tax[df_tax$Taxes>7,]$Taxes,df_tax[df_tax$Taxes>7,]$Sale.Price),2)))
```{# {r}
print (paste("Corealtion on full data:",round(cor(df_tax$Taxes,df_tax$Sale.Price),2)))
library(ggplot2)
#Fit SLR
model0 <- lm(Sale.Price ~ Taxes, data = df_tax)
model0
#Fit SLR
model0 <- lm(Sale.Price ~ Taxes, data = df_tax)
model0
ggplot(df_tax, aes(Sale.Price, Taxes)) +
geom_point() +
stat_smooth(method = lm)
summary(model)
summary(model0)
#Fit SLR
model0 <- lm(Sale.Price ~ Taxes, data = df_tax)
model0
#Superpositioning regression line on
ggplot(df_tax, aes(Sale.Price, Taxes)) +
geom_point() +
stat_smooth(method = lm, se = FALSE)
#Fit SLR
model0 <- lm(Sale.Price ~ Taxes, data = df_tax)
model0
#Superpositioning regression line on
ggplot(df_tax, aes(Sale.Price, Taxes)) +
geom_point() +
stat_smooth(method = lm, fomula = Sale.Price ~ Taxes, se = FALSE)
#Fit SLR
model0 <- lm(Sale.Price ~ Taxes, data = df_tax)
model0
#Superpositioning regression line on
ggplot(df_tax, aes(Taxes, Sale.Price)) +
geom_point() +
stat_smooth(method = lm, fomula = Sale.Price ~ Taxes, se = FALSE)
#Fit SLR
model0 <- lm(Sale.Price ~ Taxes, data = df_tax)
model0
#Superpositioning regression line on
ggplot(df_tax, aes(Taxes, Sale.Price)) +
geom_point() +
stat_smooth(method = lm, formula = Sale.Price ~ Taxes, se = FALSE)
#Fit SLR
model0 <- lm(Sale.Price ~ Taxes, data = df_tax)
model0
#Superpositioning regression line on
ggplot(df_tax, aes(Taxes, Sale.Price)) +
geom_point() +
stat_smooth(method = lm, formula = "Sale.Price ~ Taxes", se = FALSE)
#Fit SLR
model0 <- lm(Sale.Price ~ Taxes, data = df_tax)
model0
#Superpositioning regression line on
ggplot(df_tax, aes(Taxes, Sale.Price)) + #aes(x,y)
geom_point() +
stat_smooth(method = lm, se = FALSE)
View(model0)
model0
model0@fitted.values
fitted(model)
fitted(model0)
y_hat = fitted(model0)
y_act = df$Taxes
y_hat = fitted(model0)
y_act = df$Taxes
y_hat = fitted(model0)
y_act = df_tax$Taxes
sse = sum((fitted(model0) - df_tax$Taxes)^2)
y_hat = fitted(model0)
y_act = df_tax$Taxes
sse = sum((fitted(model0) - df_tax$Taxes)^2)
sse
beta1
num = 1697.8 - (14 * (43/14) * (572/14))
denom = 157.42 - 43
beta1 = num/denom
beta1
beta0 = (572/14) - beta1*(43/14)
beta0
SS_yy = 23530 - 14 *((572/14))^2
SS_xy = num #from ques7
SSE = SS_yy - beta1 * SS_xy
sigma2 = SSE/(14-2)
sigma2
y_act = 46.1
y_hat = beta0 + beta1 * 3.7
residual = y_act - y_hat
y_hat
residual
y_hat = fitted(model0)
y_act = df_tax$Taxes
sse = sum((y_act - y_hat)^2)
sse
num = 1697.8 - (14 * (43/14) * (572/14))
denom = 157.42 - 43
beta1 = num/denom
beta1
beta0 = (572/14) - beta1*(43/14)
beta0
num = 1697.8 - (14 * (43/14) * (572/14))
num
denom = 157.42 - 43
beta1 = num/denom
beta1
num = 1697.8 - (14 * (43/14) * (572/14))
num
denom = 157.42 - 43
denom
beta1 = num/denom
beta1
num = 1697.8 - (14 * (43/14) * (572/14))
num
denom = 157.42 - 14*(43/14)^2
denom
beta1 = num/denom
beta1
num = 1697.8 - (14 * (43/14) * (572/14))
num
denom = 157.42 - (14*(43/14)^2)
denom
beta1 = num/denom
beta1
beta0 = (572/14) - beta1*(43/14)
beta0
SS_yy = 23530 - 14 *((572/14))^2
SS_xy = num #from ques7
SSE = SS_yy - beta1 * SS_xy
sigma2 = SSE/(14-2)
sigma2
y_act = 46.1
y_hat = beta0 + beta1 * 3.7
residual = y_act - y_hat
y_hat
residual
